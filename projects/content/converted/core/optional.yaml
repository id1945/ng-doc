title: "@Optional"
url: optional
entries:
  - type: text
    text: |
      A constructor parameter decorator that marks a dependency as optional.
  - type: text
    text: |-
      ```typescript
      constructor(@Optional() service: Service) {}
      ```
  - type: text
    text: "#### Example"
  - type: text
    text: >-
      The DI framework provides null if the dependency is not found. For
      example, the following code allows the possibility of a null result:


      ```typescript

      class Engine {}


      @Injectable()

      class Car {
        constructor(@Optional() public engine: Engine) {}
      }


      const injector = ReflectiveInjector.resolveAndCreate([Car]);

      expect(injector.get(Car).engine).toBeNull();


      ```
