title: AsyncValidator interface
url: asyncvalidator-interface
entries:
  - type: text
    text: An interface implemented by classes that perform asynchronous validation.
  - type: text
    text: >-
      ### Provide a custom async validator directive


      The following example implements the `AsyncValidator` interface to create an

      async validator directive with a custom error key.


      ```typescript

      import { of as observableOf } from 'rxjs';


      @Directive({
        selector: '[customAsyncValidator]',
        providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:
      true}]

      })

      class CustomAsyncValidatorDirective implements AsyncValidator {
        validate(control: AbstractControl): Observable<ValidationErrors|null> {
          return observableOf({'custom': true});
        }
      }

      ```
  - type: tutorials
    links:
      - url: https://alligator.io/angular/async-validators/
        label: Custom Async Validators in Angular
  - type: text
    text: "## Interface, extends [Validator](../validator-interface)"
  - type: interface-option
    name: validate
    head: validate
    headId: validate
    interface: "validate(control: AbstractControl):
      Promise<ValidationErrors|null>|Observable<ValidationErrors|null>"
    description: |-
      Method that performs async validation against the provided control.

      Returns A promise or observable that resolves a map of validation errors
      if validation fails, otherwise null.
